version: '3.3'
services:

  frontend:
    image: toycru/foodgram_frontend:v1.0
    # build:
    #  context: ../frontend
    #  dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
  
  db:
    image: postgres:13.0-alpine
    expose:
      - 5432
    # ports:
    #  - "5432:5432"
    # restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
  
  backend:
    image: toycru/foodgram_backend:latest
    # build: ../backend/
    restart: always
    expose:
      - 8000
    # ports:
    # - "8000:8000"
    # command: >
    # bash -c "python manage.py migrate &&
    # python manage.py collectstatic --noinput &&
    # gunicorn --bind 0:8000 foodgram.wsgi"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env
  
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend

volumes:
  static_value:
  media_value:
  postgres_data:
