name: Foodgram workflow

on: [push]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          
  deploy:
    runs-on: ubuntu-20.04
    needs:
      - build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
    - name: remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker-compose stop
          sudo docker-compose rm backend
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          rm .env
          touch .env
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DEBUG='${{ secrets.DEBUG }}' >> .env
          sudo docker-compose up -d --build
          sudo docker-compose exec -T backend python manage.py makemigrations
          sudo docker-compose exec -T backend python manage.py migrate
          sudo docker-compose exec -T backend python manage.py collectstatic --no-input

 
